{"ast":null,"code":"var _jsxFileName = \"/home/abdur/Documents/Ongoing/present-buddy-api/frontend/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [generatedText, setGeneratedText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const apiResponse = await fetch('http://localhost:3000/input', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      if (!apiResponse.ok) {\n        throw new Error('API request failed');\n      }\n      const data = await apiResponse.json();\n      setGeneratedText(data.text);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(\"An error occurred while generating text. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  //   let handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     try {\n  //       var res = await fetch(\"http://localhost:8080/input\", {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\"\n  //         },\n  //         body: JSON.stringify({\n  //           prompt: prompt\n  //         }) \n  //       });\n  //       //prompt check\n  //       console.log(prompt);\n  //       let resJson = res.body;\n  //       //response check\n  //       console.log(resJson); \n  //       //Decoding Readablestream response\n  //       const reader = resJson.getReader();\n\n  // // Define a function to read the stream and accumulate its contents\n  //     async function readStream(reader) {\n  //       const chunks = [];\n  //       while (true) {\n  //         const { done, value } = await reader.read();\n  //         if (done) {\n  //           break;\n  //         }\n  //         chunks.push(value);\n  //       }\n  //       return chunks;\n  //     }\n\n  //     // Call the function to read the stream\n  //     readStream(reader)\n  //       .then(chunks => {\n  //         // Concatenate the chunks into a single Uint8Array or string\n  //         const concatenated = new Uint8Array(chunks.reduce((acc, chunk) => acc.concat(Array.from(chunk)), []));\n  //         // Convert the concatenated data to string assuming it's text\n  //         const text = new TextDecoder().decode(concatenated);\n  //         // Now you can use the 'text' variable which contains the data from the stream\n  //         console.log(\"formated text: \",text);\n  //         setResp(text); //Storing response\n  //       })\n  //       .catch(error => {\n  //         // Handle errors that occur while reading the stream\n  //         console.error('Error reading stream:', error);\n  //       });\n\n  //       if (res.status === 200) {\n  //         console.log(\"Input successful\");\n  //       } else {\n  //         console.log(\"Some error occured\");\n  //       }\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"\",\n      children: \"Present Buddy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typewriter\",\n      children: \"for automated presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-shape-divider-bottom-1707907537\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        \"data-name\": \"Layer 1\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 1200 120\",\n        preserveAspectRatio: \"none\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M985.66,92.83C906.67,72,823.78,31,743.84,14.19c-82.26-17.34-168.06-16.33-250.45.39-57.84,11.73-114,31.07-172,41.86A600.21,600.21,0,0,1,0,27.35V120H1200V95.8C1132.19,118.92,1055.71,111.31,985.66,92.83Z\",\n          className: \"shape-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"converterForm\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"text-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: prompt,\n              onChange: e => setPrompt(e.target.value),\n              id: \"text\",\n              placeholder: \"write a breif description.. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              id: \"submitButton\",\n              children: \"Go\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"file\",\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"submitButton\",\n              type: \"upload\",\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Generating text...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), generatedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: generatedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"rXsEywDOBihN8kKFf6YN6LF36M4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Home","_s","prompt","setPrompt","generatedText","setGeneratedText","isLoading","setIsLoading","error","setError","handleSubmit","event","preventDefault","apiResponse","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","text","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","viewBox","preserveAspectRatio","d","id","onSubmit","value","onChange","e","target","placeholder","type","_c","$RefreshReg$"],"sources":["/home/abdur/Documents/Ongoing/present-buddy-api/frontend/src/pages/Home.jsx"],"sourcesContent":["import { useState } from 'react';\n\n\nfunction Home() {\n\n  const [prompt, setPrompt] = useState(\"\");\n  const [generatedText, setGeneratedText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const apiResponse = await fetch('http://localhost:3000/input', { \n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt }) \n      });\n\n      if (!apiResponse.ok) {\n        throw new Error('API request failed');  \n      }\n\n      const data = await apiResponse.json(); \n      setGeneratedText(data.text);\n    } catch (error) {\n      console.error('Error:', error);\n      setError(\"An error occurred while generating text. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n//   let handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       var res = await fetch(\"http://localhost:8080/input\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify({\n//           prompt: prompt\n//         }) \n//       });\n//       //prompt check\n//       console.log(prompt);\n//       let resJson = res.body;\n//       //response check\n//       console.log(resJson); \n//       //Decoding Readablestream response\n//       const reader = resJson.getReader();\n\n// // Define a function to read the stream and accumulate its contents\n//     async function readStream(reader) {\n//       const chunks = [];\n//       while (true) {\n//         const { done, value } = await reader.read();\n//         if (done) {\n//           break;\n//         }\n//         chunks.push(value);\n//       }\n//       return chunks;\n//     }\n\n//     // Call the function to read the stream\n//     readStream(reader)\n//       .then(chunks => {\n//         // Concatenate the chunks into a single Uint8Array or string\n//         const concatenated = new Uint8Array(chunks.reduce((acc, chunk) => acc.concat(Array.from(chunk)), []));\n//         // Convert the concatenated data to string assuming it's text\n//         const text = new TextDecoder().decode(concatenated);\n//         // Now you can use the 'text' variable which contains the data from the stream\n//         console.log(\"formated text: \",text);\n//         setResp(text); //Storing response\n//       })\n//       .catch(error => {\n//         // Handle errors that occur while reading the stream\n//         console.error('Error reading stream:', error);\n//       });\n\n\n//       if (res.status === 200) {\n//         console.log(\"Input successful\");\n//       } else {\n//         console.log(\"Some error occured\");\n//       }\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n  return (\n    <div className=\"App\">\n      <h1 className=''>Present Buddy</h1>\n      <div className=\"typewriter\">\n          for automated presentation \n       </div> \n       <div className=\"custom-shape-divider-bottom-1707907537\">\n    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n        <path d=\"M985.66,92.83C906.67,72,823.78,31,743.84,14.19c-82.26-17.34-168.06-16.33-250.45.39-57.84,11.73-114,31.07-172,41.86A600.21,600.21,0,0,1,0,27.35V120H1200V95.8C1132.19,118.92,1055.71,111.31,985.66,92.83Z\" className=\"shape-fill\"></path>\n    </svg></div>\n      <form id='converterForm' onSubmit={handleSubmit}>\n\n        <div id=\"main\">\n          <div id=\"container\">\n            <div id=\"text-field\">\n              <textarea value={prompt} onChange={(e) => setPrompt(e.target.value)} id=\"text\" placeholder=\"write a breif description.. \" />\n              <button type=\"submit\" id=\"submitButton\">Go</button>\n            </div>\n            <div id=\"upload\">\n              <input id=\"file\" type=\"file\" />\n              <button id=\"submitButton\" type=\"upload\" >Upload</button>\n            </div>\n          </div>\n        </div>\n      </form>\n      {isLoading && <div>Generating text...</div>} \n      {error && <div className=\"error-message\">{error}</div>}\n      {generatedText && <div>{generatedText}</div>}\n      {/* <div dangerouslySetInnerHTML={{ __html: resp }} /> */}\n      \n    </div>\n  );\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}