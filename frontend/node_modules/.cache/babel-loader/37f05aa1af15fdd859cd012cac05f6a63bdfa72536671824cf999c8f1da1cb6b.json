{"ast":null,"code":"import pptxgen from \"pptxgenjs\";\nexport default function Slides(jsonStirng) {\n  const jsonArray = JSON.parse(jsonStirng);\n  console.log(jsonArray);\n  // 1. Create a Presentation\n  let pptx = new pptxgen();\n\n  // // 2. Add a Slide to the presentation\n  // let slide = pres.addSlide();\n\n  // // 3. Add 1+ objects (Tables, Shapes, etc.) to the Slide\n  // slide.addText(\"Hello World from PptxGenJS...\", {\n  //   x: 1.5,\n  //   y: 1.5,\n  //   color: \"363636\",\n  //   fill: { color: \"F1F1F1\" },\n  //   align: pres.AlignH.center,\n  // });\n\n  // 4. Save the Presentation\n\n  let slide = pptx.addSlide({\n    sectionTitle: \"Media\"\n  });\n  slide.addTable([[{\n    text: \"Media Examples: Video Types\",\n    options: BASE_TEXT_OPTS_L\n  }, BASE_TEXT_OPTS_R]], BASE_TABLE_OPTS);\n  slide.addNotes(\"API Docs: https://gitbrent.github.io/PptxGenJS/docs/api-media.html\\r\\nIt's worth noting that even if a video file format is supported by PowerPoint, you may still encounter issues with playing the video if the video is encoded using a codec that is not supported by the computer you are using to present the slideshow. It's a good idea to test your slideshow on the computer you will be using to present it to ensure that your videos will play correctly.\");\n  slide.addText([{\n    text: \"Type: m4v\"\n  }], {\n    ...BASE_CODE_OPTS,\n    ...{\n      x: 0.5,\n      y: 0.6,\n      h: 0.4,\n      w: 3.56\n    },\n    ...TITLE_STYLE\n  });\n  slide.addMedia({\n    x: 0.5,\n    y: 1.0,\n    h: 2.0,\n    w: 3.56,\n    type: \"video\",\n    path: IMAGE_PATHS.sample_m4v.path,\n    cover: COVER_VIDEO_16X9\n  });\n  slide.addText([{\n    text: \"`cover` image provided\"\n  }], {\n    ...BASE_CODE_OPTS,\n    ...{\n      x: 0.5,\n      y: 3.0,\n      h: 0.4,\n      w: 3.56\n    },\n    ...CODE_STYLE\n  });\n  slide.addText([{\n    text: \"Type: m4v\"\n  }], {\n    ...BASE_CODE_OPTS,\n    ...{\n      x: 9.3,\n      y: 0.6,\n      h: 0.4,\n      w: 3.56\n    },\n    ...TITLE_STYLE\n  });\n  slide.addMedia({\n    x: 9.3,\n    y: 1.0,\n    h: 2.0,\n    w: 3.56,\n    type: \"video\",\n    path: IMAGE_PATHS.sample_m4v.path\n  });\n  slide.addText([{\n    text: \"no `cover` image provided\"\n  }], {\n    ...BASE_CODE_OPTS,\n    ...{\n      x: 9.3,\n      y: 3.0,\n      h: 0.4,\n      w: 3.56\n    },\n    ...CODE_STYLE\n  });\n\n  // BOTTOM-ROW\n\n  slide.addText([{\n    text: \"Type: mp4\"\n  }], {\n    ...BASE_CODE_OPTS,\n    ...{\n      x: 0.5,\n      y: 3.85,\n      h: 0.4,\n      w: 3.6\n    },\n    ...TITLE_STYLE\n  });\n  slide.addMedia({\n    x: 0.5,\n    y: 4.25,\n    h: 2.7,\n    w: 3.6,\n    type: \"video\",\n    path: IMAGE_PATHS.sample_mp4.path,\n    cover: COVER_VIDEO_MP4\n  });\n  slide.addText([{\n    text: \"Type: avi\"\n  }], {\n    ...BASE_CODE_OPTS,\n    ...{\n      x: 4.79,\n      y: 3.85,\n      h: 0.4,\n      w: 3.6\n    },\n    ...TITLE_STYLE\n  });\n  slide.addMedia({\n    x: 4.79,\n    y: 4.25,\n    h: 2.7,\n    w: 3.6,\n    type: \"video\",\n    path: IMAGE_PATHS.sample_avi.path\n  });\n  slide.addText([{\n    text: \"Type: mov\"\n  }], {\n    ...BASE_CODE_OPTS,\n    ...{\n      x: 9.08,\n      y: 3.85,\n      h: 0.4,\n      w: 3.75\n    },\n    ...TITLE_STYLE\n  });\n  slide.addMedia({\n    x: 9.08,\n    y: 4.25,\n    h: 2.7,\n    w: 3.75,\n    type: \"video\",\n    path: IMAGE_PATHS.sample_mov.path\n  });\n  pres.writeFile({\n    fileName: \"Sample Presentation.pptx\"\n  });\n}\n_c = Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["pptxgen","Slides","jsonStirng","jsonArray","JSON","parse","console","log","pptx","slide","addSlide","sectionTitle","addTable","text","options","BASE_TEXT_OPTS_L","BASE_TEXT_OPTS_R","BASE_TABLE_OPTS","addNotes","addText","BASE_CODE_OPTS","x","y","h","w","TITLE_STYLE","addMedia","type","path","IMAGE_PATHS","sample_m4v","cover","COVER_VIDEO_16X9","CODE_STYLE","sample_mp4","COVER_VIDEO_MP4","sample_avi","sample_mov","pres","writeFile","fileName","_c","$RefreshReg$"],"sources":["/home/abdur/Documents/Ongoing/present-buddy-api/frontend/src/pages/Slides.js"],"sourcesContent":["import pptxgen from \"pptxgenjs\";\n\nexport default function Slides(jsonStirng) {\n\n  const jsonArray = JSON.parse(jsonStirng);\n  console.log(jsonArray);\n  // 1. Create a Presentation\n  let pptx = new pptxgen();\n\n  // // 2. Add a Slide to the presentation\n  // let slide = pres.addSlide();\n\n  // // 3. Add 1+ objects (Tables, Shapes, etc.) to the Slide\n  // slide.addText(\"Hello World from PptxGenJS...\", {\n  //   x: 1.5,\n  //   y: 1.5,\n  //   color: \"363636\",\n  //   fill: { color: \"F1F1F1\" },\n  //   align: pres.AlignH.center,\n  // });\n\n  // 4. Save the Presentation\n \n  let slide = pptx.addSlide({ sectionTitle: \"Media\" });\n\tslide.addTable([[{ text: \"Media Examples: Video Types\", options: BASE_TEXT_OPTS_L }, BASE_TEXT_OPTS_R]], BASE_TABLE_OPTS);\n\tslide.addNotes(\"API Docs: https://gitbrent.github.io/PptxGenJS/docs/api-media.html\\r\\nIt's worth noting that even if a video file format is supported by PowerPoint, you may still encounter issues with playing the video if the video is encoded using a codec that is not supported by the computer you are using to present the slideshow. It's a good idea to test your slideshow on the computer you will be using to present it to ensure that your videos will play correctly.\");\n\n\tslide.addText([{ text: \"Type: m4v\" }], { ...BASE_CODE_OPTS, ...{ x: 0.5, y: 0.6, h: 0.4, w: 3.56 }, ...TITLE_STYLE });\n\tslide.addMedia({ x: 0.5, y: 1.0, h: 2.0, w: 3.56, type: \"video\", path: IMAGE_PATHS.sample_m4v.path, cover: COVER_VIDEO_16X9 });\n\tslide.addText([{ text: \"`cover` image provided\" }], { ...BASE_CODE_OPTS, ...{ x: 0.5, y: 3.0, h: 0.4, w: 3.56 }, ...CODE_STYLE });\n\n\tslide.addText([{ text: \"Type: m4v\" }], { ...BASE_CODE_OPTS, ...{ x: 9.3, y: 0.6, h: 0.4, w: 3.56 }, ...TITLE_STYLE });\n\tslide.addMedia({ x: 9.3, y: 1.0, h: 2.0, w: 3.56, type: \"video\", path: IMAGE_PATHS.sample_m4v.path });\n\tslide.addText([{ text: \"no `cover` image provided\" }], { ...BASE_CODE_OPTS, ...{ x: 9.3, y: 3.0, h: 0.4, w: 3.56 }, ...CODE_STYLE });\n\n\t// BOTTOM-ROW\n\n\tslide.addText([{ text: \"Type: mp4\" }], { ...BASE_CODE_OPTS, ...{ x: 0.5, y: 3.85, h: 0.4, w: 3.6 }, ...TITLE_STYLE });\n\tslide.addMedia({\n\t\tx: 0.5,\n\t\ty: 4.25,\n\t\th: 2.7,\n\t\tw: 3.6,\n\t\ttype: \"video\",\n\t\tpath: IMAGE_PATHS.sample_mp4.path,\n\t\tcover: COVER_VIDEO_MP4,\n\t});\n\n\tslide.addText([{ text: \"Type: avi\" }], { ...BASE_CODE_OPTS, ...{ x: 4.79, y: 3.85, h: 0.4, w: 3.6 }, ...TITLE_STYLE });\n\tslide.addMedia({\n\t\tx: 4.79,\n\t\ty: 4.25,\n\t\th: 2.7,\n\t\tw: 3.6,\n\t\ttype: \"video\",\n\t\tpath: IMAGE_PATHS.sample_avi.path,\n\t});\n\n\tslide.addText([{ text: \"Type: mov\" }], { ...BASE_CODE_OPTS, ...{ x: 9.08, y: 3.85, h: 0.4, w: 3.75 }, ...TITLE_STYLE });\n\tslide.addMedia({\n\t\tx: 9.08,\n\t\ty: 4.25,\n\t\th: 2.7,\n\t\tw: 3.75,\n\t\ttype: \"video\",\n\t\tpath: IMAGE_PATHS.sample_mov.path,\n\t});\n  pres.writeFile({ fileName: \"Sample Presentation.pptx\" });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}