{"ast":null,"code":"import pptxgen from \"pptxgenjs\";\nexport default function Slides(jsonStr) {\n  const slidesData = JSON.parse(jsonStr);\n  console.log(slidesData);\n  let pres = new pptxgen();\n\n  // Slide Master Definition\n  let slideMaster = pres.defineSlideMaster({\n    title: \"Master Slide - Akbar\",\n    background: {\n      fill: \"F1F1F1\"\n    },\n    objects: [{\n      rect: {\n        x: 0,\n        y: 0.5,\n        w: \"100%\",\n        h: 0.75,\n        fill: {\n          color: \"003366\"\n        }\n      }\n    }, {\n      text: {\n        text: \"Akbar the Great\",\n        options: {\n          x: 0.5,\n          y: 0.6,\n          w: 9.0,\n          h: 0.6,\n          align: \"center\",\n          fontSize: 20,\n          color: \"FFFFFF\"\n        }\n      }\n    }]\n  });\n\n  // Create Slides from Data\n  slidesData.forEach(slideInfo => {\n    let slide = pres.addSlide({\n      masterName: \"Master Slide - Akbar\"\n    });\n\n    // Heading\n    slide.addText(slideInfo.title, {\n      x: 1,\n      y: 1.2,\n      // Adjust position if needed\n      fontSize: 20,\n      bold: true,\n      color: \"003366\"\n    });\n\n    // Bullet Points\n    slide.addText(slideInfo.content, {\n      x: 1,\n      y: 2,\n      // Adjust position if needed\n      fontSize: 16,\n      color: \"003366\",\n      // Match header color\n      bullet: true,\n      indentLevel: 0\n    });\n  });\n\n  // Generate Presentation File\n  pres.writeFile(\"AkbarPresentation.pptx\");\n  // let pres = new pptxgen();\n  // let slide = pres.addSlide();\n  // // let ar1 = jsonArray[0];\n  // // Background Options\n  // slide.background = { fill: \"FFCC00\" }; // Example: Orange background\n\n  // // Heading\n  // slide.addText(\"This is my slide 1\", {\n  //   // x: 1, y: 0.5,     // Inches\n  //   // fontSize: 24,\n  //   // bold: true,\n  //   // color: '000000'    // Black text\n  //   x: 0,\n  //   y: 1,\n  //   w: \"100%\",\n  //   h: 2,\n  //   align: \"center\",\n  //   color: \"0088CC\",\n  //   fill: \"F1F1F1\",\n  //   fontSize: 24,\n  // });\n\n  // // Bullet Points\n  // slide.addText(\n  //   [\n  //     { text: \"Bullet Point 1\", options: { bullet: true } },\n  //     { text: \"Bullet Point 2\", options: { bullet: true } },\n  //     { text: \"Bullet Point 3\", options: { bullet: true } },\n  //   ],\n  //   {\n  //     x: 1,\n  //     y: 2, // Inches\n  //     fontSize: 18,\n  //     color: \"000000\", // Black text\n  //     indentLevel: 0, // No indentation for bullets\n  //   }\n  // );\n\n  // pres.writeFile(\"MyPresentation.pptx\");\n  // // 1. Create a Presentation\n}\n_c = Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["pptxgen","Slides","jsonStr","slidesData","JSON","parse","console","log","pres","slideMaster","defineSlideMaster","title","background","fill","objects","rect","x","y","w","h","color","text","options","align","fontSize","forEach","slideInfo","slide","addSlide","masterName","addText","bold","content","bullet","indentLevel","writeFile","_c","$RefreshReg$"],"sources":["/home/abdur/Documents/Ongoing/present-buddy-api/frontend/src/pages/Slides.js"],"sourcesContent":["import pptxgen from \"pptxgenjs\";\n\nexport default function Slides(jsonStr) {\n  const slidesData = JSON.parse(jsonStr);\n  console.log(slidesData);\n  let pres = new pptxgen();\n\n  // Slide Master Definition\n  let slideMaster = pres.defineSlideMaster({\n    title: \"Master Slide - Akbar\",\n    background: { fill: \"F1F1F1\" },\n    objects: [\n      { rect: { x: 0, y: 0.5, w: \"100%\", h: 0.75, fill: { color: \"003366\" } } },\n      {\n        text: {\n          text: \"Akbar the Great\",\n          options: {\n            x: 0.5,\n            y: 0.6,\n            w: 9.0,\n            h: 0.6,\n            align: \"center\",\n            fontSize: 20,\n            color: \"FFFFFF\",\n          },\n        },\n      },\n    ],\n  });\n\n  // Create Slides from Data\n  slidesData.forEach((slideInfo) => {\n    let slide = pres.addSlide({ masterName: \"Master Slide - Akbar\" });\n\n    // Heading\n    slide.addText(slideInfo.title, {\n      x: 1,\n      y: 1.2, // Adjust position if needed\n      fontSize: 20,\n      bold: true,\n      color: \"003366\",\n    });\n\n    // Bullet Points\n    slide.addText(slideInfo.content, {\n      x: 1,\n      y: 2, // Adjust position if needed\n      fontSize: 16,\n      color: \"003366\", // Match header color\n      bullet: true,\n      indentLevel: 0,\n    });\n  });\n\n  // Generate Presentation File\n  pres.writeFile(\"AkbarPresentation.pptx\");\n  // let pres = new pptxgen();\n  // let slide = pres.addSlide();\n  // // let ar1 = jsonArray[0];\n  // // Background Options\n  // slide.background = { fill: \"FFCC00\" }; // Example: Orange background\n\n  // // Heading\n  // slide.addText(\"This is my slide 1\", {\n  //   // x: 1, y: 0.5,     // Inches\n  //   // fontSize: 24,\n  //   // bold: true,\n  //   // color: '000000'    // Black text\n  //   x: 0,\n  //   y: 1,\n  //   w: \"100%\",\n  //   h: 2,\n  //   align: \"center\",\n  //   color: \"0088CC\",\n  //   fill: \"F1F1F1\",\n  //   fontSize: 24,\n  // });\n\n  // // Bullet Points\n  // slide.addText(\n  //   [\n  //     { text: \"Bullet Point 1\", options: { bullet: true } },\n  //     { text: \"Bullet Point 2\", options: { bullet: true } },\n  //     { text: \"Bullet Point 3\", options: { bullet: true } },\n  //   ],\n  //   {\n  //     x: 1,\n  //     y: 2, // Inches\n  //     fontSize: 18,\n  //     color: \"000000\", // Black text\n  //     indentLevel: 0, // No indentation for bullets\n  //   }\n  // );\n\n  // pres.writeFile(\"MyPresentation.pptx\");\n  // // 1. Create a Presentation\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,eAAe,SAASC,MAAMA,CAACC,OAAO,EAAE;EACtC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;EACtCI,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EACvB,IAAIK,IAAI,GAAG,IAAIR,OAAO,CAAC,CAAC;;EAExB;EACA,IAAIS,WAAW,GAAGD,IAAI,CAACE,iBAAiB,CAAC;IACvCC,KAAK,EAAE,sBAAsB;IAC7BC,UAAU,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAC;IAC9BC,OAAO,EAAE,CACP;MAAEC,IAAI,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,MAAM;QAAEC,CAAC,EAAE,IAAI;QAAEN,IAAI,EAAE;UAAEO,KAAK,EAAE;QAAS;MAAE;IAAE,CAAC,EACzE;MACEC,IAAI,EAAE;QACJA,IAAI,EAAE,iBAAiB;QACvBC,OAAO,EAAE;UACPN,CAAC,EAAE,GAAG;UACNC,CAAC,EAAE,GAAG;UACNC,CAAC,EAAE,GAAG;UACNC,CAAC,EAAE,GAAG;UACNI,KAAK,EAAE,QAAQ;UACfC,QAAQ,EAAE,EAAE;UACZJ,KAAK,EAAE;QACT;MACF;IACF,CAAC;EAEL,CAAC,CAAC;;EAEF;EACAjB,UAAU,CAACsB,OAAO,CAAEC,SAAS,IAAK;IAChC,IAAIC,KAAK,GAAGnB,IAAI,CAACoB,QAAQ,CAAC;MAAEC,UAAU,EAAE;IAAuB,CAAC,CAAC;;IAEjE;IACAF,KAAK,CAACG,OAAO,CAACJ,SAAS,CAACf,KAAK,EAAE;MAC7BK,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,GAAG;MAAE;MACRO,QAAQ,EAAE,EAAE;MACZO,IAAI,EAAE,IAAI;MACVX,KAAK,EAAE;IACT,CAAC,CAAC;;IAEF;IACAO,KAAK,CAACG,OAAO,CAACJ,SAAS,CAACM,OAAO,EAAE;MAC/BhB,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,CAAC;MAAE;MACNO,QAAQ,EAAE,EAAE;MACZJ,KAAK,EAAE,QAAQ;MAAE;MACjBa,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA1B,IAAI,CAAC2B,SAAS,CAAC,wBAAwB,CAAC;EACxC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;AACF;AAACC,EAAA,GA9FuBnC,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}