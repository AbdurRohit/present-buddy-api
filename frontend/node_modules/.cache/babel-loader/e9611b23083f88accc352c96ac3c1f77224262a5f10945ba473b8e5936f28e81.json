{"ast":null,"code":"import pptxgen from \"pptxgenjs\";\nexport default function Slides(jsonStr) {\n  try {\n    const slidesData = Object.values(JSON.parse(jsonStr));\n    let pres = new pptxgen();\n\n    // Slide Master Definition\n    let slideMaster = pres.defineSlideMaster({\n      title: \"Master Slide - Akbar\",\n      background: {\n        fill: \"F1F1F1\"\n      },\n      objects: [{\n        rect: {\n          x: 0,\n          y: 0.5,\n          w: \"100%\",\n          h: 0.75,\n          fill: {\n            color: \"003366\"\n          }\n        }\n      }, {\n        text: {\n          text: \"PresentB\",\n          options: {\n            x: 0.5,\n            y: 0.6,\n            w: 9.0,\n            h: 0.6,\n            align: \"center\",\n            fontSize: 20,\n            color: \"FFFFFF\"\n          }\n        }\n      }]\n    });\n\n    // Create Slides from Data\n    slidesData.forEach(slideInfo => {\n      let slide = pres.addSlide({\n        masterName: \"Master Slide - Akbar\"\n      });\n\n      // Heading\n      slide.addText(slideInfo.title, {\n        x: 1,\n        y: 1.2,\n        fontSize: 20,\n        bold: true,\n        color: \"003366\"\n      });\n\n      // Bullet Points with Dynamic Positioning\n      const bulletYStart = 2; // Initial Y position for the first bullet\n      const bulletSpacing = 0.5; // Spacing between bullets\n\n      slideInfo.content.forEach((bulletText, index) => {\n        slide.addText(bulletText, {\n          x: 1,\n          y: bulletYStart + index * bulletSpacing,\n          fontSize: 16,\n          color: '003366',\n          bullet: true,\n          indentLevel: 0\n        });\n      });\n    });\n\n    // Generate Presentation File\n    pres.writeFile(\"AkbarPresentation.pptx\");\n  } catch (error) {\n    console.error(\"Error generating presentation:\", error);\n    // You might want to display an error message to the user here\n  }\n}\n_c = Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["pptxgen","Slides","jsonStr","slidesData","Object","values","JSON","parse","pres","slideMaster","defineSlideMaster","title","background","fill","objects","rect","x","y","w","h","color","text","options","align","fontSize","forEach","slideInfo","slide","addSlide","masterName","addText","bold","bulletYStart","bulletSpacing","content","bulletText","index","bullet","indentLevel","writeFile","error","console","_c","$RefreshReg$"],"sources":["/home/abdur/Documents/Ongoing/present-buddy-api/frontend/src/pages/Slides.js"],"sourcesContent":["import pptxgen from \"pptxgenjs\";\n\nexport default function Slides(jsonStr) {\n  try {\n    const slidesData = Object.values(JSON.parse(jsonStr)); \n\n    let pres = new pptxgen();\n\n    // Slide Master Definition\n    let slideMaster = pres.defineSlideMaster({\n      title: \"Master Slide - Akbar\",\n      background: { fill: \"F1F1F1\" },\n      objects: [\n        { rect: { x: 0, y: 0.5, w: \"100%\", h: 0.75, fill: { color: \"003366\" } } },\n        {\n          text: {\n            text: \"PresentB\",\n            options: {\n              x: 0.5,\n              y: 0.6,\n              w: 9.0,\n              h: 0.6,\n              align: \"center\",\n              fontSize: 20,\n              color: \"FFFFFF\",\n            },\n          },\n        },\n      ],\n    });\n\n    // Create Slides from Data\n    slidesData.forEach((slideInfo) => {\n      let slide = pres.addSlide({ masterName: \"Master Slide - Akbar\" });\n\n      // Heading\n      slide.addText(slideInfo.title, {\n        x: 1,\n        y: 1.2, \n        fontSize: 20,\n        bold: true,\n        color: \"003366\",\n      });\n\n      // Bullet Points with Dynamic Positioning\n      const bulletYStart = 2;  // Initial Y position for the first bullet\n      const bulletSpacing = 0.5; // Spacing between bullets\n\n      slideInfo.content.forEach((bulletText, index) => {\n        slide.addText(bulletText, {\n          x: 1, \n          y: bulletYStart + (index * bulletSpacing), \n          fontSize: 16, \n          color: '003366', \n          bullet: true, \n          indentLevel: 0\n        });\n      });\n    });\n\n    // Generate Presentation File\n    pres.writeFile(\"AkbarPresentation.pptx\"); \n  } catch (error) {\n    console.error(\"Error generating presentation:\", error);\n    // You might want to display an error message to the user here\n  }\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAE/B,eAAe,SAASC,MAAMA,CAACC,OAAO,EAAE;EACtC,IAAI;IACF,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC,CAAC;IAErD,IAAIM,IAAI,GAAG,IAAIR,OAAO,CAAC,CAAC;;IAExB;IACA,IAAIS,WAAW,GAAGD,IAAI,CAACE,iBAAiB,CAAC;MACvCC,KAAK,EAAE,sBAAsB;MAC7BC,UAAU,EAAE;QAAEC,IAAI,EAAE;MAAS,CAAC;MAC9BC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE,GAAG;UAAEC,CAAC,EAAE,MAAM;UAAEC,CAAC,EAAE,IAAI;UAAEN,IAAI,EAAE;YAAEO,KAAK,EAAE;UAAS;QAAE;MAAE,CAAC,EACzE;QACEC,IAAI,EAAE;UACJA,IAAI,EAAE,UAAU;UAChBC,OAAO,EAAE;YACPN,CAAC,EAAE,GAAG;YACNC,CAAC,EAAE,GAAG;YACNC,CAAC,EAAE,GAAG;YACNC,CAAC,EAAE,GAAG;YACNI,KAAK,EAAE,QAAQ;YACfC,QAAQ,EAAE,EAAE;YACZJ,KAAK,EAAE;UACT;QACF;MACF,CAAC;IAEL,CAAC,CAAC;;IAEF;IACAjB,UAAU,CAACsB,OAAO,CAAEC,SAAS,IAAK;MAChC,IAAIC,KAAK,GAAGnB,IAAI,CAACoB,QAAQ,CAAC;QAAEC,UAAU,EAAE;MAAuB,CAAC,CAAC;;MAEjE;MACAF,KAAK,CAACG,OAAO,CAACJ,SAAS,CAACf,KAAK,EAAE;QAC7BK,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE,GAAG;QACNO,QAAQ,EAAE,EAAE;QACZO,IAAI,EAAE,IAAI;QACVX,KAAK,EAAE;MACT,CAAC,CAAC;;MAEF;MACA,MAAMY,YAAY,GAAG,CAAC,CAAC,CAAE;MACzB,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;;MAE3BP,SAAS,CAACQ,OAAO,CAACT,OAAO,CAAC,CAACU,UAAU,EAAEC,KAAK,KAAK;QAC/CT,KAAK,CAACG,OAAO,CAACK,UAAU,EAAE;UACxBnB,CAAC,EAAE,CAAC;UACJC,CAAC,EAAEe,YAAY,GAAII,KAAK,GAAGH,aAAc;UACzCT,QAAQ,EAAE,EAAE;UACZJ,KAAK,EAAE,QAAQ;UACfiB,MAAM,EAAE,IAAI;UACZC,WAAW,EAAE;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA9B,IAAI,CAAC+B,SAAS,CAAC,wBAAwB,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD;EACF;AACF;AAACE,EAAA,GAhEuBzC,MAAM;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}